export const pluginSwitch=()=>{const ranges=document.querySelectorAll(".switch-range"),selects=document.querySelectorAll(".switch-select");for(const range of ranges)switchByRange(range);for(const select of selects)switchBySelect(select)};const switchByRange=range=>{const min=range.dataset.min,step=range.dataset.step,group=range.dataset.group,groupedElements=document.querySelectorAll('[data-group="'+group+'"]:not(#'+range.id+")"),output=range.nextElementSibling;range.addEventListener("input",(e=>{const ct=e.currentTarget,index=(ct.value-min)/step;output.innerHTML=ct.value;for(const el of groupedElements)switchSelectedElement(el,index)}))},switchBySelect=select=>{const group=select.dataset.group,groupedElements=document.querySelectorAll('[data-group="'+group+'"]:not(#'+select.id+")");select.addEventListener("input",(e=>{const index=e.currentTarget.selectedIndex;for(const el of groupedElements)switchSelectedElement(el,index)}))},switchSelectedElement=(el,index)=>{if(el.classList.contains("switch-range"))el.value=Number(el.dataset.step)*index+Number(el.dataset.min),el.nextElementSibling.innerHTML=el.value;else if(el.classList.contains("switch-number")){const numMin=Number(el.dataset.min),numMax=Number(el.dataset.max);let currentValue=numMin+Number(el.dataset.step)*index;currentValue=currentValue<numMin?numMin:currentValue>numMax?numMax:currentValue,el.innerHTML=currentValue}else{const items=el.querySelectorAll(".switch-item"),lastIndex=items.length-1;index>lastIndex&&(index=lastIndex);for(let i=0;i<items.length;i++){const item=items[i];el.classList.contains("switch-select")?item.selected=index==i:el.classList.contains("switch-default")&&(index==i?item.dataset.selected="":delete item.dataset.selected)}}};